@page "/profile/{userName}"
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json;
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

@code {
    [Parameter]
    public string userName { get; set; }

    private User? user;
    private Profile? profile;
    private bool canEditProfile;
    private List<Item>? items;
    private List<GamesStat>? gamesStats;
    private string ErrorMessage { get; set; }


    protected override async Task OnInitializedAsync()
    {
        user = await HttpClient.GetFromJsonAsync<User>($"https://localhost:7276/api/blaze-lounge/user-name/{userName}");
        profile = await HttpClient.GetFromJsonAsync<Profile>($"https://localhost:7276/api/blaze-lounge-profile/{user.FkProfileidProfile}");
        items = await GetUserItems();
        gamesStats = await GetUserGameStats();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var loggedInUser = authState.User;
        canEditProfile = loggedInUser.Identity?.Name == userName;
    }

    private async Task<List<Item>?> GetUserItems()
    {
        var response = await HttpClient.GetAsync($"https://localhost:7276/api/blaze-lounge-shop/get-user-items/{userName}");
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<List<Item>>();
            return result;
        }
        return null;
    }

    private async Task<List<GamesStat>?> GetUserGameStats()
    {
        var response = await HttpClient.GetAsync($"https://localhost:7276/api/blaze-lounge/get-user-game-stats/{userName}");
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<List<GamesStat>>();
            return result;
        }
        return null;
    }
}

<AuthorizeView>
    <Authorized>
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div id="errorMessageCont">
                <a id="errorMessage">@ErrorMessage</a>
            </div>
        }
        
        @if (user != null)
        {
        <div id="top-container">
                <div>
                    <p><strong>Username:</strong> @user?.Username</p>
                    <p><strong>First Name:</strong> @user?.FirstName</p>
                    <p><strong>Email:</strong> @user?.Email</p>
                    <p><strong>Currency Balance:</strong> @profile?.Currency</p>
                </div>
                @if(canEditProfile)
                {
                    <div>
                        <button class="btn btn-primary" @onclick="EditProfile">Change password</button>
                    </div>
                }
        </div>
        }

        @if (canEditProfile)
        {   
            
            @if (items != null)
            {
                <h2>User inventory</h2>
                <div id="item-container">
                    @foreach (var item in items)
                    {
                        string color = "";
                        if (item.Description.Split(' ').FirstOrDefault() != null)
                        {
                            color = item.Name.Split(' ').FirstOrDefault();
                            Console.WriteLine(color);
                        }

                        <div class="shop-item">
                            <h3>@item.Name</h3>
                            <div class="display-window">
                                <div class="bg-circle">
                                </div>
                                <span class="oi oi-brush" style="color: @color" aria-hidden="true"></span>
                            </div>
                            <span class="desc">@item.Description </span>
                            <div class="bottom-row">
                                <p class="price">Worth: @item.Price</p>
                                <button style="border: 0; background: transparent; margin:0; padding: 0; width: fit-content; color: #F5f1F2; text-decoration: none;" @onclick="()=> ChangeColors(item)">Equip &#9655</button>
                            </div>
                        </div>
                    }
                </div>
            }
        }

        @if (gamesStats != null)
        {
            <h3 class="table-label">Game statistics</h3>
            <table class="table stats-table">
                <thead>
                    <tr>
                        <th scope="col">Game</th>
                        <th scope="col">Times played</th>
                        <th scope="col">Wins</th>
                        <th scope="col">Losses</th>
                        <th scope="col">Currency gained</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var gameStat in gamesStats)
                    {
                        <tr>
                            <td>@gameStat.Game</td>
                            <td>@gameStat.TimesPlayed</td>
                            <td>@gameStat.Wins</td>
                            <td>@gameStat.Loses</td>
                            <td class="currency">@Math.Round(gameStat.CurrencyGained, 2)</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/landing");
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private void EditProfile()
    {
        NavigationManager.NavigateTo($"/edit-profile");
    }

    private async void ChangeColors(Item item)
    {
        var response = await HttpClient.PostAsJsonAsync<Item>($"https://localhost:7276/api/blaze-lounge-shop/change-user-color/{item}?username={user.Username}", item);
        if(response.IsSuccessStatusCode)
        {
            ErrorMessage = "Color changed successfully";
        }
        else
        {
            ErrorMessage = "Failed to change color";
        }
    }
}